name: build
permissions: read-all
on: [ push, pull_request ]

env:
  ALLOWED_ENDPOINTS: >
    1k4dacprodeus2file4.blob.core.windows.net:443
    artifactcache.actions.githubusercontent.com:443
    api.github.com:443
    api.azul.com:443
    cdn.azul.com:443
    checkerframework.org:443
    coveralls.io:443
    docs.oracle.com:443
    github.com:443
    guava.dev:443
    lightbend.github.io:443
    oss.sonatype.org:443
    pipelines.actions.githubusercontent.com:443
    plugins.gradle.org:443
    repo.maven.apache.org:443
    repo1.maven.org:443
    scans-in.gradle.com:443
    services.gradle.org:443
    sonarcloud.io:443
  MIN_JVM: 11
  MAX_JVM: 17

jobs:
  caffeine:
    name: Caffeine Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 17 ]
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@int
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests
        run: ./.github/scripts/test.sh --caffeine
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: (matrix.java == env.MAX_JVM) && always()
        with:
          retention-days: 1
          name: caffeine-test-results
          path: '**/results/*.xml'
      - name: Publish Coverage
        if: >
          matrix.java == env.MAX_JVM
          && github.event_name == 'push'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: ./gradlew --daemon coveralls -S
        continue-on-error: true
      - name: SonarQube
        if: >
          matrix.java == env.MAX_JVM
          && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          git fetch --unshallow
          ./gradlew --daemon sonarqube -S -Dsonar.branch.name=${GITHUB_REF##*/}
        continue-on-error: true
      - name: Publish Snapshot
        if: >
          matrix.java == env.MIN_JVM
          && github.event_name == 'push'
          && endsWith(github.ref, github.event.repository.default_branch)
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: 20BCF6B1
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: ./gradlew --daemon publishToSonatype
      - name: Stop Gradle daemon
        if: always()
        run: ./gradlew --stop
      - name: Cancel if failed
        uses: andymckay/cancel-action@0.2
        continue-on-error: true
        if: failure()

  guava:
    name: Guava Compatibility Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 17 ]
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@int
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests
        run: ./.github/scripts/test.sh --guava
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: (matrix.java == env.MAX_JVM) && always()
        with:
          retention-days: 1
          name: guava-test-results
          path: '**/results/*.xml'
      - name: Stop Gradle daemon
        if: always()
        run: ./gradlew --stop
      - name: Cancel if failed
        uses: andymckay/cancel-action@0.2
        continue-on-error: true
        if: failure()

  event_file:
    name: Event File
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Event File
        path: ${{ github.event_path }}
